{"version":3,"sources":["suits.js","App.js","reportWebVitals.js","index.js"],"names":["SuitCards","props","state","suits","window","fetch","then","r","json","res","i","values","length","push","name","awakenedName","designer","rarity","attribute","images","promo","detail","original","awakened","source","type","eventName","availability","TW","JP","EN","metadata","nation","archive","setState","console","log","this","className","map","renderSuitCard","Component","suit","idx","src","App","path","element","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oTAIqBA,E,kDACjB,WAAYC,GAAO,IAAD,8BACd,cAAMA,IACDC,MAAQ,CACTC,MAAO,IAHG,E,qDAMlB,WAAqB,IAAD,OAChBC,OAAOC,MAAM,uJACRC,MAAK,SAAAC,GAAC,OAAIA,EAAEC,UACZF,MAAK,SAAAG,GAGF,IAFA,IAAIN,EAAQ,GAEJO,EAAI,EAAGA,EAAID,EAAIE,OAAOC,OAAQF,IAClCP,EAAMU,KAAK,CACPC,KAAML,EAAIE,OAAOD,GAAG,GACpBK,aAAcN,EAAIE,OAAOD,GAAG,GAC5BM,SAAUP,EAAIE,OAAOD,GAAG,GACxBO,OAAQR,EAAIE,OAAOD,GAAG,GACtBQ,UAAWT,EAAIE,OAAOD,GAAG,GACzBS,OAAQ,CACJC,MAAOX,EAAIE,OAAOD,GAAG,IACrBW,OAAQZ,EAAIE,OAAOD,GAAG,IACtBY,SAAUb,EAAIE,OAAOD,GAAG,IACxBa,SAAUd,EAAIE,OAAOD,GAAG,KAE5Bc,OAAQ,CACJC,KAAMhB,EAAIE,OAAOD,GAAG,GACpBgB,UAAWjB,EAAIE,OAAOD,GAAG,IAE7BiB,aAAc,CACVC,IAAI,EACJC,GAAyB,SAArBpB,EAAIE,OAAOD,GAAG,GAClBoB,GAA0B,SAAtBrB,EAAIE,OAAOD,GAAG,KAEtBqB,SAAU,CACNC,OAAQvB,EAAIE,OAAOD,GAAG,GACtBuB,QAASxB,EAAIE,OAAOD,GAAG,MAInC,EAAKwB,SAAS,CAAC/B,e,oBAI3B,WAEI,OADAgC,QAAQC,IAAIC,KAAKnC,OACbmC,KAAKnC,MAAMC,MAEb,qBAAKmC,UAAU,uBAAf,SACGD,KAAKnC,MAAMC,MAAMoC,IAAIC,KAHG,S,GA/CEC,aAwDvC,SAASD,EAAeE,EAAMC,GAE1B,OACI,sBAAKL,UAAU,YAAf,UACI,qBAAKM,IAAKF,EAAKvB,OAAOC,MAAiBkB,UAAU,YAAfK,GAClC,oBAAGL,UAAU,YAAb,cAA2BI,EAAK5B,KAAhC,U,mBC5CG+B,MAhBf,WAGE,OACE,cAAC,IAAD,UACI,qBAAKP,UAAU,MAAf,SACI,wBAAQA,UAAU,aAAlB,SACI,cAAC,IAAD,UACI,cAAC,IAAD,CAAOQ,KAAK,IAAIC,QAAS,cAAC,EAAD,eCD9BC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB5C,MAAK,YAAkD,IAA/C6C,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.d5dba99f.chunk.js","sourcesContent":["import { Component } from 'react';\r\nimport 'whatwg-fetch';\r\nimport './suits.css';\r\n\r\nexport default class SuitCards extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            suits: []\r\n        };\r\n    }\r\n    componentDidMount() {\r\n        window.fetch('https://sheets.googleapis.com/v4/spreadsheets/1XkJ4QD8pzoOwL97lFtTSAv2fOb3DikNQYDNkXn6LL9Y/values/Suits?key=AIzaSyBXC3NZmF3G0LK50YSS4EY4yxb3W7AJa80')\r\n            .then(r => r.json())\r\n            .then(res => {\r\n                let suits = [];\r\n\r\n                for(let i = 1; i < res.values.length; i++) {\r\n                    suits.push({\r\n                        name: res.values[i][0],\r\n                        awakenedName: res.values[i][1],\r\n                        designer: res.values[i][5],\r\n                        rarity: res.values[i][2],\r\n                        attribute: res.values[i][3],\r\n                        images: {\r\n                            promo: res.values[i][11],\r\n                            detail: res.values[i][12],\r\n                            original: res.values[i][13],\r\n                            awakened: res.values[i][14]\r\n                        },\r\n                        source: {\r\n                            type: res.values[i][7],\r\n                            eventName: res.values[i][8]\r\n                        },\r\n                        availability: {\r\n                            TW: true,\r\n                            JP: res.values[i][9] === 'TRUE',\r\n                            EN: res.values[i][10] === 'TRUE'\r\n                        },\r\n                        metadata: {\r\n                            nation: res.values[i][4],\r\n                            archive: res.values[i][6]\r\n                        }\r\n                    });\r\n                }\r\n                this.setState({suits});\r\n            })\r\n    }\r\n\r\n    render() {\r\n        console.log(this.state)\r\n        if(!this.state.suits) return null;\r\n        return (\r\n          <div className='suit-cards-container'>\r\n            {this.state.suits.map(renderSuitCard)}\r\n          </div>\r\n        );\r\n    }\r\n}\r\n\r\nfunction renderSuitCard(suit, idx) {\r\n    // console.log(suit.images.promo, idx)\r\n    return (\r\n        <div className='suit-card'>\r\n            <img src={suit.images.promo} key={idx} className='suit-img' />\r\n            <p className='suit-name'> {suit.name} </p>\r\n        </div>\r\n    )\r\n}\r\n\r\nasync function renderSuitCards() {\r\n    return getAllSuits()\r\n        .then(suits => {\r\n            // console.log(suits);\r\n            return (\r\n              <div>\r\n                {suits.map(renderSuitCard)}\r\n              </div>\r\n            );\r\n\r\n        })\r\n}\r\n\r\nasync function getAllSuits() {\r\n    return window.fetch('https://sheets.googleapis.com/v4/spreadsheets/1XkJ4QD8pzoOwL97lFtTSAv2fOb3DikNQYDNkXn6LL9Y/values/Suits?key=AIzaSyBXC3NZmF3G0LK50YSS4EY4yxb3W7AJa80')\r\n        .then(r => r.json())\r\n        .then(res => {\r\n            let suits = [];\r\n\r\n            for(let i = 1; i < res.values.length; i++) {\r\n                suits.push({\r\n                    name: res.values[i][0],\r\n                    awakenedName: res.values[i][1],\r\n                    designer: res.values[i][5],\r\n                    rarity: res.values[i][2],\r\n                    attribute: res.values[i][3],\r\n                    images: {\r\n                        promo: res.values[i][11],\r\n                        detail: res.values[i][12],\r\n                        original: res.values[i][13],\r\n                        awakened: res.values[i][14]\r\n                    },\r\n                    source: {\r\n                        type: res.values[i][7],\r\n                        eventName: res.values[i][8]\r\n                    },\r\n                    availability: {\r\n                        TW: true,\r\n                        JP: res.values[i][9] === 'TRUE',\r\n                        EN: res.values[i][10] === 'TRUE'\r\n                    },\r\n                    metadata: {\r\n                        nation: res.values[i][4],\r\n                        archive: res.values[i][6]\r\n                    }\r\n                });\r\n            }\r\n            return suits;\r\n        })\r\n}\r\n","import './App.css';\nimport SuitCards from './suits';\nimport {Routes} from \"react-router\";\nimport {BrowserRouter as Router, Route} from \"react-router-dom\";\n\nfunction App() {\n    // console.log(suitCards);\n\n  return (\n    <Router>\n        <div className=\"App\">\n            <header className=\"App-header\">\n                <Routes>\n                    <Route path=\"/\" element={<SuitCards />} />\n                </Routes>\n            </header>\n        </div>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}