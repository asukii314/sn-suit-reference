{"version":3,"sources":["suitDetail.js","suits.js","App.js","reportWebVitals.js","index.js"],"names":["SuitDetail","props","updateImgType","imgType","setState","renderSuitImageButtons","Object","entries","suit","images","filter","map","cn","state","className","onClick","bind","toUpperCase","substring","toggleZoom","zoom","this","name","closePane","src","alt","Component","SuitCards","renderSuitCard","idx","setActiveSuit","promo","activeSuit","suits","window","fetch","then","r","json","res","i","values","length","push","awakenedName","designer","rarity","attribute","detail","original","awakened","source","type","eventName","availability","TW","JP","EN","metadata","nation","archive","App","path","element","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oUAGqBA,E,kDACjB,WAAYC,GAAO,IAAD,8BACd,cAAMA,IAcVC,cAAgB,SAACC,GACb,EAAKC,SAAS,CAACD,aAhBD,EAmBlBE,uBAAyB,WACrB,OAAOC,OAAOC,QAAQ,EAAKN,MAAMO,KAAKC,QACjCC,QAAO,wDACPC,KAAI,YAAwB,IAAD,mBAArBR,EAAqB,KAClBS,GADkB,KACb,2BAA6BT,IAAY,EAAKU,MAAMV,QAAU,YAAc,KACvF,OACI,wBAAQW,UAAWF,EAAIG,QAAS,EAAKb,cAAcc,KAAnB,eAA8Bb,GAA9D,SAAyEA,EAAQ,GAAGc,cAAgBd,EAAQe,UAAU,SAzBpH,EA+BlBC,WAAa,WACc,eAApB,EAAKN,MAAMO,KACV,EAAKhB,SAAS,CAACgB,KAAM,cAErB,EAAKhB,SAAS,CAACgB,KAAM,gBAjCzB,EAAKP,MAAQ,CACTV,QAAS,QACTiB,KAAM,cAJI,E,sDAQlB,WACQC,KAAKpB,MAAMO,OACXa,KAAKpB,MAAMO,KAAKC,OAAOY,KAAKR,MAAMV,UAClCkB,KAAKjB,SAAS,CAACD,QAAS,a,oBA4BhC,WACI,OAAGkB,KAAKpB,MAAMO,KAER,sBAAKM,UAAW,yBAA2BO,KAAKR,MAAMO,KAAtD,UACA,sBAAKN,UAAU,oCAAf,UACI,qBAAKA,UAAU,aAAf,SAA6BO,KAAKpB,MAAMO,KAAKc,OAC5CD,KAAKhB,yBACN,wBAAQS,UAAU,0BAA0BC,QAASM,KAAKpB,MAAMsB,UAAhE,uBAEF,qBAAKT,UAAU,4BAAf,SACI,qBAAKA,UAAW,mBAAqBO,KAAKR,MAAMO,KAAMI,IAAKH,KAAKpB,MAAMO,KAAKC,OAAOY,KAAKR,MAAMV,SAAUsB,IAAKJ,KAAKR,MAAMV,QAASY,QAASM,KAAKF,kBAMnJ,S,GAxDyBO,aCEnBC,G,8DACjB,WAAY1B,GAAO,IAAD,8BACd,cAAMA,IA4CV2B,eAAiB,SAACpB,EAAMqB,GACpB,OACI,sBAAKf,UAAU,YAAsBC,QAAS,EAAKe,cAAcd,KAAnB,eAA6BR,GAA3E,UACI,qBAAKgB,IAAKhB,EAAKC,OAAOsB,MAAOjB,UAAU,WAAWW,IAAKjB,EAAKc,OAC5D,oBAAGR,UAAU,YAAb,cAA2BN,EAAKc,KAAhC,SAF4BO,IA/CtB,EAsDlBC,cAAgB,SAACE,GACV,EAAKnB,MAAMmB,aAAeA,EACzB,EAAK5B,SAAS,CAAC4B,WAAY,OAE3B,EAAK5B,SAAS,CAAC4B,gBA1DL,EA8DlBT,UAAY,WACR,EAAKnB,SAAS,CAAC4B,WAAY,QA7D3B,EAAKnB,MAAQ,CACToB,MAAO,GACPD,WAAY,MAJF,E,qDAOlB,WAAqB,IAAD,OAChBE,OAAOC,MAAM,uJACRC,MAAK,SAAAC,GAAC,OAAIA,EAAEC,UACZF,MAAK,SAAAG,GAGF,IAFA,IAAIN,EAAQ,GAEJO,EAAI,EAAGA,EAAID,EAAIE,OAAOC,OAAQF,IAClCP,EAAMU,KAAK,CACPrB,KAAMiB,EAAIE,OAAOD,GAAG,GACpBI,aAAcL,EAAIE,OAAOD,GAAG,GAC5BK,SAAUN,EAAIE,OAAOD,GAAG,GACxBM,OAAQP,EAAIE,OAAOD,GAAG,GACtBO,UAAWR,EAAIE,OAAOD,GAAG,GACzB/B,OAAQ,CACJsB,MAAOQ,EAAIE,OAAOD,GAAG,IACrBQ,OAAQT,EAAIE,OAAOD,GAAG,IACtBS,SAAUV,EAAIE,OAAOD,GAAG,IACxBU,SAAUX,EAAIE,OAAOD,GAAG,KAE5BW,OAAQ,CACJC,KAAMb,EAAIE,OAAOD,GAAG,GACpBa,UAAWd,EAAIE,OAAOD,GAAG,IAE7Bc,aAAc,CACVC,IAAI,EACJC,GAAyB,SAArBjB,EAAIE,OAAOD,GAAG,GAClBiB,GAA0B,SAAtBlB,EAAIE,OAAOD,GAAG,KAEtBkB,SAAU,CACNC,OAAQpB,EAAIE,OAAOD,GAAG,GACtBoB,QAASrB,EAAIE,OAAOD,GAAG,MAInC,EAAKpC,SAAS,CAAC6B,e,oBAyB3B,WACI,OAAIZ,KAAKR,MAAMoB,MAEb,sBAAKnB,UAAU,uBAAf,UACE,cAAC,EAAD,CAAYN,KAAMa,KAAKR,MAAMmB,WAAYT,UAAWF,KAAKE,YACxDF,KAAKR,MAAMoB,MAAMtB,IAAIU,KAAKO,mBAJF,S,GApEEF,c,eCgBxBmC,MAhBf,WAGE,OACE,cAAC,IAAD,UACI,qBAAK/C,UAAU,MAAf,SACI,wBAAQA,UAAU,aAAlB,SACI,cAAC,IAAD,UACI,cAAC,IAAD,CAAOgD,KAAK,IAAIC,QAAS,cAAC,EAAD,eCD9BC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB9B,MAAK,YAAkD,IAA/C+B,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.7ae3cb50.chunk.js","sourcesContent":["import { Component } from 'react';\r\nimport './suitDetail.css';\r\n\r\nexport default class SuitDetail extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            imgType: \"promo\",\r\n            zoom: \"zoomed-out\"\r\n        };\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        if(!this.props.suit) return;\r\n        if(!this.props.suit.images[this.state.imgType]) {\r\n            this.setState({imgType: \"promo\"});\r\n        }\r\n    }\r\n\r\n    updateImgType = (imgType) => {\r\n        this.setState({imgType});\r\n    }\r\n\r\n    renderSuitImageButtons = () => {\r\n        return Object.entries(this.props.suit.images)\r\n            .filter(([imgType, imgUrl]) => !!imgUrl)\r\n            .map(([imgType, imgUrl]) => {\r\n                const cn = 'suit-detail-type-button' + (imgType === this.state.imgType ? ' selected' : '');\r\n                return (\r\n                    <button className={cn} onClick={this.updateImgType.bind(this, imgType)}>{imgType[0].toUpperCase() + imgType.substring(1)}</button>\r\n                );\r\n\r\n            });\r\n    }\r\n\r\n    toggleZoom = () => {\r\n        if(this.state.zoom === \"zoomed-out\") {\r\n            this.setState({zoom: \"zoomed-in\"});\r\n        } else {\r\n            this.setState({zoom: \"zoomed-out\"});\r\n        }\r\n    }\r\n\r\n    render() {\r\n        if(this.props.suit) {\r\n            return (\r\n              <div className={'suit-detail-container ' + this.state.zoom}>\r\n              <div className='suit-detail-type-button-container'>\r\n                  <div className='suit-title'>{this.props.suit.name}</div>\r\n                  {this.renderSuitImageButtons()}\r\n                  <button className='suit-detail-type-button' onClick={this.props.closePane}>‚ùå</button>\r\n              </div>\r\n                <div className='suit-detail-img-container'>\r\n                    <img className={'suit-detail-img ' + this.state.zoom} src={this.props.suit.images[this.state.imgType]} alt={this.state.imgType} onClick={this.toggleZoom}/>\r\n                </div>\r\n\r\n              </div>\r\n            );\r\n        }\r\n        return null;\r\n    }\r\n}\r\n","import { Component } from 'react';\r\nimport SuitDetail from './suitDetail';\r\nimport 'whatwg-fetch';\r\nimport './suits.css';\r\n\r\nexport default class SuitCards extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            suits: [],\r\n            activeSuit: null\r\n        };\r\n    }\r\n    componentDidMount() {\r\n        window.fetch('https://sheets.googleapis.com/v4/spreadsheets/1XkJ4QD8pzoOwL97lFtTSAv2fOb3DikNQYDNkXn6LL9Y/values/Suits?key=AIzaSyBXC3NZmF3G0LK50YSS4EY4yxb3W7AJa80')\r\n            .then(r => r.json())\r\n            .then(res => {\r\n                let suits = [];\r\n\r\n                for(let i = 1; i < res.values.length; i++) {\r\n                    suits.push({\r\n                        name: res.values[i][0],\r\n                        awakenedName: res.values[i][1],\r\n                        designer: res.values[i][5],\r\n                        rarity: res.values[i][2],\r\n                        attribute: res.values[i][3],\r\n                        images: {\r\n                            promo: res.values[i][11],\r\n                            detail: res.values[i][12],\r\n                            original: res.values[i][13],\r\n                            awakened: res.values[i][14]\r\n                        },\r\n                        source: {\r\n                            type: res.values[i][7],\r\n                            eventName: res.values[i][8]\r\n                        },\r\n                        availability: {\r\n                            TW: true,\r\n                            JP: res.values[i][9] === 'TRUE',\r\n                            EN: res.values[i][10] === 'TRUE'\r\n                        },\r\n                        metadata: {\r\n                            nation: res.values[i][4],\r\n                            archive: res.values[i][6]\r\n                        }\r\n                    });\r\n                }\r\n                this.setState({suits});\r\n            })\r\n    }\r\n\r\n    renderSuitCard = (suit, idx) => {\r\n        return (\r\n            <div className='suit-card' key={idx} onClick={this.setActiveSuit.bind(this,suit)}>\r\n                <img src={suit.images.promo} className='suit-img' alt={suit.name}/>\r\n                <p className='suit-name'> {suit.name} </p>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    setActiveSuit = (activeSuit) => {\r\n        if(this.state.activeSuit === activeSuit) {\r\n            this.setState({activeSuit: null});\r\n        } else {\r\n            this.setState({activeSuit});\r\n        }\r\n    }\r\n\r\n    closePane = () => {\r\n        this.setState({activeSuit: null});\r\n    }\r\n\r\n    render() {\r\n        if(!this.state.suits) return null;\r\n        return (\r\n          <div className='suit-cards-container'>\r\n            <SuitDetail suit={this.state.activeSuit} closePane={this.closePane}/>\r\n            {this.state.suits.map(this.renderSuitCard)}\r\n          </div>\r\n        );\r\n    }\r\n}\r\n","import './App.css';\nimport SuitCards from './suits';\nimport {Routes} from \"react-router\";\nimport {HashRouter as Router, Route} from \"react-router-dom\";\n\nfunction App() {\n    // console.log(suitCards);\n\n  return (\n    <Router>\n        <div className=\"App\">\n            <header className=\"App-header\">\n                <Routes>\n                    <Route path=\"/\" element={<SuitCards />} />\n                </Routes>\n            </header>\n        </div>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}